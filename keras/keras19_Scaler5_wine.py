import time
import numpy as np
from sklearn import datasets
from sklearn.datasets import load_wine
from tensorflow.keras.utils import to_categorical # 값 백터수를 맞춰주는 api
from sklearn.model_selection import train_test_split
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.callbacks import EarlyStopping
from sklearn.preprocessing import MinMaxScaler, StandardScaler, RobustScaler, MaxAbsScaler
from tensorflow.python.keras.backend import relu

#1. 데이터
datasets = load_wine()

x = datasets.data
y = datasets.target
y = to_categorical(y)
print(np.unique(y))
x_train, x_test, y_train, y_test = train_test_split(x, y,
        train_size=0.8, shuffle=True, random_state=66)
# print(x_train.shape, y_train.shape)#(142, 13) (142, 3)
# print(x_test.shape, y_test.shape)#(36, 13) (36, 3)
scaler = MaxAbsScaler()
scaler.fit(x_train)
x_train = scaler.transform(x_train)
x_test = scaler.transform(x_test)

#2. 모델구성
model = Sequential()
model.add(Dense(70, activation = 'linear', input_dim = 13))# linear= 기본값
model.add(Dense(50, activation = 'linear'))
model.add(Dense(30, activation = 'relu'))
model.add(Dense(10, activation = 'linear'))
model.add(Dense(3, activation = 'softmax'))
model.save("./_save/keras25_1_save_wine.h5")
#3. 컴파일, 훈련
model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy']) # categorical_crossentorpy 결과값이[0~3]이상일때 적합한 값 
                                                                                        # metrics 몇개가 맞았는지 결과값을 보기위해 씀 
                                                                                        # # 리스트[]는 다른 값이 더 들어갈수도 있음
es = EarlyStopping(monitor='val_loss', patience=50, mode = 'auto')
start = time.time()
hist = model.fit(x_train, y_train, epochs=1000, batch_size = 1, 
                 validation_split = 0.2 , callbacks = [es], verbose = 1)
end = time.time()- start

print("걸린시간 : ", round(end, 3), '초')

#4. 평가, 예측
loss = model.evaluate(x_test, y_test)
print('loss: ', loss[0])
print('accuracy : ', loss[1])

results = model.predict(x_test[:7])
print(y_test[:7])
print(results)
'''
# 기본값
걸린시간 :  8.374 초
2/2 [==============================] - 0s 2ms/step - loss: 0.2440 - accuracy: 0.9167
loss:  0.2439877688884735
accuracy :  0.9166666865348816
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[8.1153831e-07 1.3181170e-02 9.8681796e-01]
 [6.9965363e-02 9.2171949e-01 8.3150622e-03]
 [9.1705888e-06 9.9991715e-01 7.3715833e-05]
 [9.9743444e-01 1.9469580e-03 6.1863958e-04]
 [5.4419688e-05 9.9823546e-01 1.7101158e-03]
 [7.3802171e-06 9.9976271e-01 2.2988215e-04]
 [2.6865893e-03 1.0862699e-02 9.8645067e-01]]
'''
'''
# MinMaxScaler
걸린시간 :  6.304 초
2/2 [==============================] - 0s 1ms/step - loss: 0.3203 - accuracy: 0.9722
loss:  0.32027244567871094
accuracy :  0.9722222089767456
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[7.6255542e-06 1.5644966e-05 9.9997675e-01]
 [7.2731988e-14 1.0000000e+00 5.3036634e-19]
 [3.8878991e-21 1.0000000e+00 2.6821570e-31]
 [9.9999893e-01 1.4130418e-10 1.1067838e-06]
 [1.1960087e-04 9.9988043e-01 3.6018091e-10]
 [1.4050550e-15 1.0000000e+00 6.2776869e-23]
 [1.6083999e-06 2.0243167e-09 9.9999833e-01]]
'''
'''
# relu를 사용한 MinMaxScaler
113/113 [==============================] - 0s 660us/step - loss: 0.0000e+00 - accuracy: 1.0000 - val_loss: 5.1981e-05 - val_accuracy: 1.0000
걸린시간 :  30.512 초
2/2 [==============================] - 0s 0s/step - loss: 0.6915 - accuracy: 0.9722
loss:  0.6915047764778137
accuracy :  0.9722222089767456
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[9.8124720e-13 1.1224133e-10 1.0000000e+00]
 [2.1566783e-24 1.0000000e+00 4.1025015e-25]
 [1.2478548e-34 1.0000000e+00 2.4137568e-36]
 [1.0000000e+00 6.0997767e-19 1.5088561e-12]
 [1.2191544e-09 1.0000000e+00 6.3034877e-14]
 [1.5209927e-26 1.0000000e+00 3.1350704e-28]
 [1.9959377e-12 4.0077107e-18 1.0000000e+00]]
'''
'''
# StandardScaler
걸린시간 :  18.988 초
2/2 [==============================] - 0s 2ms/step - loss: 0.6863 - accuracy: 0.9722
loss:  0.6863291263580322
accuracy :  0.9722222089767456
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[2.8218029e-12 1.6961573e-09 1.0000000e+00]
 [5.0492168e-28 1.0000000e+00 1.4499367e-32]
 [0.0000000e+00 1.0000000e+00 0.0000000e+00]
 [1.0000000e+00 5.5444450e-20 6.2570837e-10]
 [2.5590424e-10 1.0000000e+00 1.9685234e-16]
 [6.8572322e-31 1.0000000e+00 0.0000000e+00]
 [1.0522508e-12 4.9862572e-15 1.0000000e+00]]
'''
'''
# relu를 사용한 StandardScaler
113/113 [==============================] - 0s 649us/step - loss: 0.0000e+00 - accuracy: 1.0000 - val_loss: 1.4387e-06 - val_accuracy: 1.0000
걸린시간 :  76.96 초
2/2 [==============================] - 0s 0s/step - loss: 0.4449 - accuracy: 0.9722
loss:  0.44486188888549805
accuracy :  0.9722222089767456
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[1.3653445e-12 1.2343001e-12 1.0000000e+00]
 [2.5017568e-28 1.0000000e+00 5.2878160e-30]
 [0.0000000e+00 1.0000000e+00 0.0000000e+00]
 [1.0000000e+00 3.1308197e-18 2.3443146e-16]
 [1.5980085e-14 1.0000000e+00 1.5887436e-16]
 [3.0563567e-34 1.0000000e+00 1.7318841e-37]
 [1.0753890e-13 5.8702737e-15 1.0000000e+00]]
'''
'''
# RobustScaler
걸린시간 :  17.827 초
2/2 [==============================] - 0s 2ms/step - loss: 0.6156 - accuracy: 0.9722
loss:  0.615595281124115
accuracy :  0.9722222089767456
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[3.97937054e-13 3.72957754e-09 1.00000000e+00]
 [1.04401330e-29 1.00000000e+00 1.55960895e-30]
 [0.00000000e+00 1.00000000e+00 0.00000000e+00]
 [1.00000000e+00 8.82896971e-25 3.34098166e-11]
 [4.32058740e-13 1.00000000e+00 1.96986048e-16]
 [6.56435363e-35 1.00000000e+00 0.00000000e+00]
 [1.60247249e-12 1.12863650e-14 1.00000000e+00]]
'''
'''
# relu를 사용한 RobustScaler
113/113 [==============================] - 0s 627us/step - loss: 0.0000e+00 - accuracy: 1.0000 - val_loss: 4.1107e-09 - val_accuracy: 1.0000
걸린시간 :  25.359 초
2/2 [==============================] - 0s 0s/step - loss: 0.4750 - accuracy: 0.9722
loss:  0.4750128984451294
accuracy :  0.9722222089767456
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[3.1174338e-12 2.5386034e-11 1.0000000e+00]
 [3.1153703e-24 1.0000000e+00 1.5481542e-26]
 [5.2801400e-36 1.0000000e+00 0.0000000e+00]
 [1.0000000e+00 2.2727377e-20 7.6198549e-16]
 [2.7868419e-13 1.0000000e+00 2.1592616e-14]
 [8.6782933e-28 1.0000000e+00 3.4051593e-31]
 [5.8892772e-13 5.7693569e-13 1.0000000e+00]]
'''
'''
# MaxAbsScaler
걸린시간 :  5.867 초
2/2 [==============================] - 0s 998us/step - loss: 0.0452 - accuracy: 0.9722
loss:  0.04519260674715042
accuracy :  0.9722222089767456
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[2.7794458e-04 2.3711221e-03 9.9735093e-01]
 [1.2318459e-06 9.9999881e-01 9.6345545e-09]
 [2.1993008e-11 1.0000000e+00 1.0535391e-14]
 [9.9955159e-01 4.3231243e-04 1.6073172e-05]
 [3.9251393e-04 9.9960274e-01 4.7344201e-06]
 [3.2299385e-10 1.0000000e+00 5.5361089e-12]
 [8.0470060e-04 3.4854220e-05 9.9916041e-01]]
'''
'''
# relu를 사용한 MaxAbsScaler
113/113 [==============================] - 0s 684us/step - loss: 2.2922e-04 - accuracy: 1.0000 - val_loss: 0.0688 - val_accuracy: 0.9655
걸린시간 :  9.217 초
2/2 [==============================] - 0s 0s/step - loss: 0.0028 - accuracy: 1.0000
loss:  0.002753030275925994
accuracy :  1.0
[[0. 0. 1.]
 [0. 1. 0.]
 [0. 1. 0.]
 [1. 0. 0.]
 [0. 1. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
[[1.2046571e-12 3.7992479e-05 9.9996197e-01]
 [1.5027760e-08 1.0000000e+00 3.7365798e-11]
 [3.5534586e-15 1.0000000e+00 1.4647810e-16]
 [1.0000000e+00 5.8447213e-08 1.0285836e-08]
 [2.9014240e-05 9.9997091e-01 1.2430206e-07]
 [2.9026309e-13 1.0000000e+00 3.8876756e-14]
 [8.0117857e-11 1.3445543e-07 9.9999988e-01]]
'''